---
import { getCollection } from "astro:content";
import Layout from "../../../../layouts/Layout.astro";
import Spotlight from "../../../../components/Spotlight.astro";
import Navbar from "../../../../components/Navbar.astro";
import { useTranslations } from "../../../../utils/translations.js";
import Gallery from "../../../../components/Gallery.astro";

export async function getStaticPaths() {
  const projects = await getCollection("personalProjects");

  return projects.map((project) => ({
    params: { id: project.slug },
    props: { project },
  }));
}

const { project } = Astro.props;
const { data, slug } = project;
const { img, icons, gallery, github } = data;

const lang = "en";
const t = useTranslations(lang);
---

<Layout lang={lang}>
  <Spotlight />
  <Navbar lang={lang} />


  <div class="ps-4 sm:ps-8 md:ps-12 xl:ps-60 2xl:ps-96 pt-14 sm:pt-8 md:pt-20">
    <a
      href={`/${lang}/#work`}
      class="relative font-syne z-100 flex items-center gap-2 text-white hover:text-gray-300 transition-colors duration-200 cursor-pointer w-20"
    >
      <svg
        class="w-4 h-4 sm:w-5 sm:h-5"
        fill="none"
        stroke="currentColor"
        viewBox="0 0 24 24"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M15 19l-7-7 7-7"></path>
      </svg>
      <span class="text-sm sm:text-base">Back</span>
    </a>
  </div>


  <iconsSide>
    <div
      class="text-white font-instrument text-3xl sm:text-4xl md:text-5xl lg:text-6xl text-center flex w-full justify-center pt-4 sm:pt-6 gap-4 sm:gap-6 md:gap-8 lg:gap-10 px-4"
    >
      {
        icons.map((icon: string) => (
          <i class={icon} transition:name={`icon-${icon + slug}`} />
        ))
      }
    </div>
  </iconsSide>


  <div
    class="flex flex-col lg:flex-row justify-center items-center gap-6 sm:gap-8 md:gap-10 lg:gap-12 py-6 sm:py-8 md:py-10 lg:py-12 px-4 sm:px-6 md:px-8"
  >
    <aside class="w-full lg:w-auto flex justify-center">
      <img
        transition:name={`img-${slug}`}
        src={img}
        alt={t(`work.${slug}.title`)}
        class="rounded-2xl sm:rounded-3xl lg:rounded-4xl w-full max-w-sm sm:max-w-md md:max-w-lg lg:w-auto lg:h-150 object-cover py-2"
      />
    </aside>


    <main
      class="text-center items-center w-full max-w-2xl px-4 sm:px-6 lg:px-0"
    >
      <h1
        transition:name={`title-${slug}`}
        class="text-2xl sm:text-3xl md:text-4xl font-bold mb-6 sm:mb-8 md:mb-10 text-white font-syne"
      >
        {t(`work.${slug}.title`)}
      </h1>

      <div
        class="text-white font-instrument animate-fadeIn text-start prose prose-sm sm:prose-base max-w-none"
      >
        <h2
          class="text-white font-syne text-lg sm:text-xl md:text-2xl font-bold mb-2"
        >
          {t("work.projectRole")}
        </h2>
        <p class="mb-4 sm:mb-6 text-sm sm:text-base leading-relaxed">
          {t(`work.${slug}.role`)}
        </p>

        <h2
          class="text-white font-syne text-lg sm:text-xl md:text-2xl font-bold mb-2"
        >
          {t("work.challenges")}
        </h2>
        <p class="mb-4 sm:mb-6 text-sm sm:text-base leading-relaxed">
          {t(`work.${slug}.challenge`)}
        </p>

        <h2
          class="text-white font-syne text-lg sm:text-xl md:text-2xl font-bold mb-2"
        >
          {t("work.achievements")}
        </h2>
        <p class="text-sm sm:text-base leading-relaxed">
          {t(`work.${slug}.achieve`)}
        </p>
        <a
          href={github}
          target="_blank"
          rel="noreferrer noopener"
          class="w-full bg-port-color hover:bg-port-color cursor-pointer hover:shadow-[0_0_15px_rgba(255,255,255,0.7)] text-black px-8 py-3 rounded-full transition-all duration-300 flex items-center justify-center gap-2 no-underline"
        >
          <svg
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 16 16"
            fill="currentColor"
            class="h-6 w-6"
            aria-hidden="true"
          >
            <path
              d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z"
            ></path>
          </svg>
          Project Link on Github
        </a>
      </div>
    </main>
  </div>


  <h1
    class="text-2xl sm:text-3xl md:text-4xl font-bold mt-6 sm:mt-8 text-white font-syne text-center px-4"
  >
    More Images
  </h1>


  <div class="mt-6 sm:mt-8 md:mt-10 flex justify-center px-4 sm:px-6">
    <div
      class="gallery-container w-full sm:w-5/6 md:w-4/5 lg:w-2/3 max-w-6xl overflow-hidden"
    >
      <Gallery images={gallery} />
    </div>
  </div>
</Layout>

<style>
  .gallery-container {
    mask: linear-gradient(90deg, transparent, black 5%, black 95%, transparent);
    -webkit-mask: linear-gradient(
      90deg,
      transparent,
      black 2%,
      black 98%,
      transparent
    );
  }

  .gallery-track {
    width: max-content;
    animation: infiniteScroll 30s linear infinite;
  }

  @media (max-width: 640px) {
    .gallery-track {
      animation-duration: 40s;
    }
  }

  @keyframes infiniteScroll {
    0% {
      transform: translateX(0);
    }
    100% {
      transform: translateX(-50%);
    }
  }

  .gallery-container:hover .gallery-track {
    animation-play-state: paused;
  }

  @media (hover: none) {
    .gallery-container:active .gallery-track {
      animation-play-state: paused;
    }
  }
</style>
